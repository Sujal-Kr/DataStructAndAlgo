package GeeksForGeeks;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class DiagonalOrderOfBinaryTree{
    public static class Node{
        int data;
        Node left;
        Node right;
        Node(int data){
            this.data = data;
            left=right=null;
        }
    }
    public static void main(String[] args) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left= new Node(4);
        root.left.right= new Node(5);
        root.right.left= new Node(6);
        root.right.right= new Node(7);
        diagonalorder(root);
        
    }
    public static void diagonalorder(Node node) {
        ArrayList<Integer> list=new ArrayList<Integer>();
        Queue<Node> q=new LinkedList<>();
        q.add(node);
        while(!q.isEmpty()){
            int size=q.size();
            for(int i=0;i<size;i++){
                node=q.remove();
                while(node!=null){
                    list.add(node.data);
                    if(node.left!=null)q.add(node.left);
                    node=node.right;
                }
            }
            
        }
        System.out.print(list);
    }
}
